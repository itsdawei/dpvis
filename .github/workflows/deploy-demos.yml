name: Deploy Live Demos

on:
  workflow_dispatch:
    inputs:
      demos:
        description: 'Demos to deploy (e.g. ["wis", "knapsack"])'
        required: true
        default: '[]'
      preview:
        description: 'Deploy to preview version?'
        type: boolean
        required: false
        default: true

env:
  PROJECT_ID: dpvis-demo
  REGION: us-central1
  REPO: us-central1-docker.pkg.dev/dpvis-demo/dpvis-repo

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        demo: ${{ fromJson(github.event.inputs.demos) }}
    steps:
    - uses: actions/checkout@v3

    - name: Authenticate to GCP
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up gcloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.PROJECT_ID }}

    - name: Authenticate Docker with Artifact Registry
      run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

    - name: Build, Push, and Deploy to Cloud Run
      run: |
        DEMO="${{ matrix.demo }}"
        DEPLOY_AS="${DEMO//_/-}"

        PREVIEW="${{ github.event.inputs.preview }}"
        if [[ "$PREVIEW" == "true" ]]; then
          DEPLOY_AS="${DEMO}-preview"
        fi

        IMAGE="${{ env.REPO }}/$DEPLOY_AS"

        echo "ðŸ”¨ Building Docker image: $IMAGE"
        docker build -t "$IMAGE" --build-arg DEMO="$DEMO" .

        echo "ðŸ“¤ Pushing to Artifact Registry..."
        docker push "$IMAGE"

        echo "ðŸš€ Deploying to Cloud Run as service: $DEPLOY_AS"
        gcloud run deploy "$DEPLOY_AS" \
          --image "$IMAGE" \
          --region "${{ env.REGION }}" \
          --platform managed \
          --allow-unauthenticated \
          --port 8080

        echo "ðŸ”— Fetching service URL..."
        URL=$(gcloud run services describe "$DEPLOY_AS" \
          --region "${{ env.REGION }}" \
          --platform managed \
          --format="value(status.url)")

        echo "âœ… Deployed $DEMO â†’ $URL"
