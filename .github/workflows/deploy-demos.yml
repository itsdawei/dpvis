name: Deploy Live Demos on Main


on:
  push:
    branches: [*]
    paths:
      - 'demo/**'
      - 'Dockerfile'
      - 'Makefile'
  workflow_dispatch:

env:
  PROJECT_ID: dpvis-demo
  REGION: us-central1
  REPO: us-central1-docker.pkg.dev/dpvis-demo/dpvis-repo

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      demos: ${{ steps.filter.outputs.changed }}

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Find changed demo files
      id: filter
      run: |
        ALLOWED=(wis knapsack)

        # Get changed .py files under demo/
        CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E '^demo/[^/]+\.py$' || true)

        MATCHED=()
        for file in $CHANGED; do
          echo "Processing file: '$file'"
          name=$(basename "$file" .py)
          if [[ " ${ALLOWED[*]} " =~ " $name " ]]; then
            MATCHED+=("$name")
          fi
        done

        echo "Matched demos: ${MATCHED[*]}"

        # Convert array to JSON list
        JSON=$(printf '%s\n' "${MATCHED[@]}" | jq -R -s -c 'split("\n") | map(select(length > 0))')
        echo "changed=$JSON" >> "$GITHUB_OUTPUT"

  deploy:
    needs: detect-changes
    runs-on: ubuntu-latest
    if: needs.detect-changes.outputs.demos != '[]'
    strategy:
      matrix:
        demo: ${{ fromJson(needs.detect-changes.outputs.demos) }}

    steps:
    - uses: actions/checkout@v3

    - uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.PROJECT_ID }}

    - name: Authenticate Docker with Artifact Registry
      run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

    - name: Build, Push, and Deploy to Cloud Run
      run: |
        DEMO=${{ matrix.demo }}
        IMAGE=${{ env.REPO }}/$DEMO

        echo "ðŸ”¨ Building $DEMO â†’ $IMAGE"
        docker build -t "$IMAGE" --build-arg DEMO="$DEMO" .

        echo "ðŸ“¤ Pushing image to Artifact Registry"
        docker push "$IMAGE"

        echo "ðŸš€ Deploying to Cloud Run: $DEMO"
        gcloud run deploy "$DEMO" \
          --image "$IMAGE" \
          --region "${{ env.REGION }}" \
          --platform managed \
          --allow-unauthenticated

    - name: Show service URL
      run: |
        URL=$(gcloud run services describe "${{ matrix.demo }}" \
          --region "${{ env.REGION }}" \
          --platform managed \
          --format="value(status.url)")
        echo "âœ… Service URL: $URL"
